name: Build and Deploy
on:
  push:
    branches:
      - feature/lab_final

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:
      
      - name: Configurar JDK 17
        uses: actions/setup-java@v2
        with:
            java-version: '17'
            distribution: 'adopt'
      
      - name: Obtener Codigo
        uses: actions/checkout@v4

      - name: Validar existencia del proyecto en SonarCloud
        id: validarProyectoEnSonar
        run: |
          set +e
          curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'organization=labfinal-devsecops' -d 'visibility=public'
          if [ $? -ne 0 ]
          then
            echo "Proyecto ya existe en SonarCloud"
            # bash./.github/workflows/send-email.sh "Error SonarCloud" "Se produjo un error en la instalación de SonarCloud en ${REPO_GITHUB}."
          else
            echo "Proyecto ${{ github.event.repository.name }} creado exitosamente"

            echo "Se establece rama main como rama por defecto"
            curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' '-d name=main' -d 'name=${{ github.event.repository.name }}'
          fi

      # - name: Isntalar SonarQube scanner
      #   run: |
      #     curl -sSf https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/linux/bin/sonar-scanner-cli-4.6.2.2472.zip -o sonar-scanner-cli.zip
      #     unzip sonar-scanner-cli.zip
      #     sudo mv sonar-scanner-cli-4.6.2.2472 /usr/local/sonar-scanner-cli
      #     sudo update-alternatives --install /usr/bin/sonar-scanner sonar-scanner /usr/local/sonar-scanner-cli/bin/sonar-scanner 1

      - name: Analisis SonarCloud
        run: |
          npx sonarqube-scanner \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${SONAR_TOKEN} \
              -Dsonar.organization=labfinal-devsecops \
              -Dsonar.projectKey=${{ github.event.repository.name }} \
              -Dsonar.branch.name=feature/lab_final \
              -Dsonar.sources=.
          # npm run sonarqube
          #   -Dsonar.projectKey=${{ github.event.repository.name }}
          #   -Dsonar.organization=labfinal-devsecops
          #   -Dsonar.host.url=https://sonarcloud.io
          #   -Dsonar.login=${SONAR_TOKEN}
          #   -Dsonar.branch.name=feature/lab_final
          #   -Dsonar.sources=.
          #   -Dsonar.language=js
          #   -Dsonar.sourceEncoding=UTF-8
          #   -Dsonar.exclusions=**/node_modules/**
          #   -Dsonar.inclusions=**/*.js,**/*.jsx,**/*.ts,**/*.tsx

      - name: Mensaje de finalización
        run: echo "Termino Job "


